{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/SubmitForm.js\";\nimport React, { Component } from 'react';\nimport { Form, FormControl, Button, Alert, Row, Col } from 'react-bootstrap';\n\nvar Loader = require('react-loader');\n\nclass SubmitForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.captureFile = event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n    };\n\n    this.convertToBuffer = async reader => {\n      //file is converted to a buffer for upload to IPFS\n      const buffer = await Buffer.from(reader.result); //set this buffer-using es6 syntax\n\n      this.setState({\n        buffer\n      });\n    };\n\n    this.state = {\n      loadingPrice: false,\n      fullName: '',\n      title: '',\n      text: '',\n      price: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      this.loadSubmission(this.props.match.params.id);\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.loadPrice();\n  }\n\n  loadSubmission(hashId) {\n    return new Promise((resolve, reject) => {\n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then(values => {\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.hashId = hashId;\n\n        if (submission.timestamp === 0) {\n          this.props.addNotification(\"Cannot find the paper\", \"error\");\n          return reject(\"No paper found\");\n        }\n\n        this.setState({\n          submission: submission\n        });\n        resolve(submission);\n      }).catch(err => {\n        return reject(err);\n      });\n    });\n  }\n\n  loadPrice() {\n    console.log(this.props);\n    this.props.hashStoreContractInstance.price().then(result => {\n      this.setState({\n        price: result.toString()\n      });\n    });\n  } //Take file input from user\n\n\n  saveText() {\n    let {\n      fullName,\n      title,\n      text\n    } = this.state;\n    let data = {\n      fullName,\n      title,\n      text\n    };\n    let {\n      buffer\n    } = this.state;\n    this.setState({\n      savingText: true\n    });\n    this.props.ipfs.add(buffer, (err, fileHash) => {\n      if (err) {\n        this.setState({\n          savingText: false\n        });\n        return this.props.addNotification(err.message, \"error\");\n      }\n\n      data.file = fileHash;\n      console.log(\"IPFS file hash:\", fileHash);\n      this.props.ipfs.addJSON(data, (err, hash) => {\n        if (err) {\n          this.setState({\n            savingText: false\n          });\n          return this.props.addNotification(err.message, \"error\");\n        }\n\n        console.log(\"Se guardo IPFS\", data);\n        console.log(\"IPFS hash:\", hash);\n        console.log(\"Direccion eth:\", this.props.web3.eth.defaultAccount);\n        console.log(\"Direccion eth:\", this.props.hashStoreContractInstance); // if(this.props.match.params.id) {\n        //   this.props.hashStoreContractInstance.saveNewVersion(hash, this.props.match.params.id, {from: this.props.web3.eth.defaultAccount, value: this.state.price, gas: 200000}).then((result) => {\n        //     /* if(result.receipt.status !== \"0x1\"){ // can be used after byzantium to check status\n        //       throw new Error(\"Transaction failed\");\n        //     } */\n        //     this.setState({savingText: false});\n        //     console.log('Data saved successfully, Tx:', result.tx);\n        //     let log = result.logs[0];\n        //     let hashId = log.args._hashId.toNumber();\n        //     this.props.addNotification(`New version saved successfully ! Submission ID: ${hashId}`, \"success\");\n        //     //this.props.onSubmit(hashId);\n        //   }).catch((err) => {\n        //     this.setState({savingText: false});\n        //     this.props.addNotification(err.message, \"error\");\n        //   });\n        // } else {\n\n        this.props.hashStoreContractInstance.saveNewPaper(hash, {\n          from: this.props.web3.eth.defaultAccount,\n          value: this.state.price,\n          gas: 200000\n        }).then(result => {\n          /* if(result.receipt.status !== \"0x1\"){ // can be used after byzantium to check status\n            throw new Error(\"Transaction failed\");\n          } */\n          this.setState({\n            savingText: false\n          });\n          console.log('Data saved successfully, Tx:', result.tx);\n          let log = result.logs[0];\n\n          let hashId = log.args._hashId.toNumber();\n\n          this.props.addNotification(`Data saved successfully ! Submission ID: ${hashId}`, \"success\"); //this.props.onSubmit(hashId);\n        }).catch(err => {\n          this.setState({\n            savingText: false\n          });\n          this.props.addNotification(err.message, \"error\");\n        }); //}\n      });\n    });\n  }\n\n  updateInputValue(e, field) {\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  validForm() {\n    if (!this.props.hashStoreContractInstance) {\n      return false;\n    }\n\n    return this.state.fullName && this.state.title && this.state.text && this.state.buffer;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SubmitForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.loadingVersion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, this.props.match.params.id && !this.state.submission ? /*#__PURE__*/React.createElement(Alert, {\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, \"ERROR: Paper ID \", this.props.match.params.id, \" no encontrado.\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupTitle\",\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      type: \"text\",\n      onChange: e => this.updateInputValue(e, 'title'),\n      placeholder: \"Titulo\",\n      value: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupAuthors\",\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      type: \"text\",\n      onChange: e => this.updateInputValue(e, 'fullName'),\n      placeholder: \"Autores\",\n      value: this.state.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupAbstract\",\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      as: \"textarea\",\n      onChange: e => this.updateInputValue(e, 'text'),\n      placeholder: \"Resumen\",\n      value: this.state.text,\n      rows: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formGroupFile\",\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      required: true,\n      type: \"file\",\n      onChange: this.captureFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 16\n      }\n    }, \"Precio por Paper: \", this.props.web3.utils.fromWei(this.state.price, 'ether'), \" ETH\")), /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.savingText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"mt-3 pure-button pure-input-1-2 button-success\",\n      disabled: !this.validForm() || this.state.savingText,\n      onClick: () => this.saveText(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, \"Subir\"))))))));\n  }\n\n}\n\nexport default SubmitForm;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/SubmitForm.js"],"names":["React","Component","Form","FormControl","Button","Alert","Row","Col","Loader","require","SubmitForm","constructor","props","captureFile","event","stopPropagation","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","buffer","Buffer","from","result","setState","state","loadingPrice","fullName","title","text","price","componentDidMount","match","params","id","loadSubmission","UNSAFE_componentWillMount","loadPrice","hashId","Promise","resolve","reject","submission","hashStoreContractInstance","getPaperByID","then","values","sender","hashContent","timestamp","toNumber","addNotification","catch","err","console","log","toString","saveText","data","savingText","ipfs","add","fileHash","message","addJSON","hash","web3","eth","defaultAccount","saveNewPaper","value","gas","tx","logs","args","_hashId","updateInputValue","e","field","validForm","render","loadingVersion","utils","fromWei"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport {Form, FormControl, Button, Alert, Row, Col} from 'react-bootstrap';\n\nvar Loader = require('react-loader');\n\n\nclass SubmitForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadingPrice: false,\n      fullName: '',\n      title: '',\n      text: '',\n      price: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      this.loadSubmission(this.props.match.params.id);\n    }\n  }\n\n  UNSAFE_componentWillMount() {\n    this.loadPrice();\n  }\n\n  loadSubmission(hashId) {\n    return new Promise((resolve, reject) => {\n      \n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then((values) => {\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.hashId = hashId;\n        if (submission.timestamp === 0) {\n          this.props.addNotification(\"Cannot find the paper\", \"error\");\n          return reject(\"No paper found\")\n        }\n        this.setState({submission: submission});\n        resolve(submission);\n      }).catch((err) => {\n        \n        return reject(err);\n      });\n    });\n  }\n\n  loadPrice() {\n    console.log(this.props);\n    this.props.hashStoreContractInstance.price().then((result) => { \n      this.setState({price: result.toString()});\n      }\n    );\n  }\n\n  //Take file input from user\n  captureFile =(event) => {\n    event.stopPropagation()\n    event.preventDefault()\n    const file = event.target.files[0]\n    let reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => this.convertToBuffer(reader)\n  };\n\n  //Convert the file to buffer to store on IPFS \n  convertToBuffer = async(reader) => {\n    //file is converted to a buffer for upload to IPFS\n    const buffer = await Buffer.from(reader.result);\n    //set this buffer-using es6 syntax\n    this.setState({buffer});\n  };\n\n  saveText() {\n    let {fullName, title, text} = this.state;\n    let data = {fullName, title, text};\n    let {buffer} = this.state;\n\n    this.setState({savingText: true});\n\n    this.props.ipfs.add(buffer, (err, fileHash) => {\n      if (err) {\n        this.setState({savingText: false});\n        return this.props.addNotification(err.message, \"error\");\n      }\n      data.file=fileHash;\n      console.log(\"IPFS file hash:\", fileHash);\n\n      this.props.ipfs.addJSON(data, (err, hash) => {\n        if (err) {\n          this.setState({savingText: false});\n          return this.props.addNotification(err.message, \"error\");\n        }\n\n        console.log(\"Se guardo IPFS\", data);\n        console.log(\"IPFS hash:\", hash);\n        console.log(\"Direccion eth:\", this.props.web3.eth.defaultAccount);\n        console.log(\"Direccion eth:\", this.props.hashStoreContractInstance);\n\n        // if(this.props.match.params.id) {\n        //   this.props.hashStoreContractInstance.saveNewVersion(hash, this.props.match.params.id, {from: this.props.web3.eth.defaultAccount, value: this.state.price, gas: 200000}).then((result) => {\n        //     /* if(result.receipt.status !== \"0x1\"){ // can be used after byzantium to check status\n        //       throw new Error(\"Transaction failed\");\n        //     } */\n  \n        //     this.setState({savingText: false});\n        //     console.log('Data saved successfully, Tx:', result.tx);\n        //     let log = result.logs[0];\n        //     let hashId = log.args._hashId.toNumber();\n        //     this.props.addNotification(`New version saved successfully ! Submission ID: ${hashId}`, \"success\");\n        //     //this.props.onSubmit(hashId);\n        //   }).catch((err) => {\n        //     this.setState({savingText: false});\n        //     this.props.addNotification(err.message, \"error\");\n        //   });\n\n        // } else {\n\n        this.props.hashStoreContractInstance.saveNewPaper(hash, {from: this.props.web3.eth.defaultAccount, value: this.state.price, gas: 200000}).then((result) => {\n          /* if(result.receipt.status !== \"0x1\"){ // can be used after byzantium to check status\n            throw new Error(\"Transaction failed\");\n          } */\n\n          this.setState({savingText: false});\n          console.log('Data saved successfully, Tx:', result.tx);\n          let log = result.logs[0];\n          let hashId = log.args._hashId.toNumber();\n          this.props.addNotification(`Data saved successfully ! Submission ID: ${hashId}`, \"success\");\n          //this.props.onSubmit(hashId);\n        }).catch((err) => {\n          this.setState({savingText: false});\n          this.props.addNotification(err.message, \"error\");\n        });\n      //}\n      });\n    });\n  }\n\n  updateInputValue(e, field) {\n    this.setState({[field]: e.target.value});\n  }\n\n  validForm() {\n    if (!this.props.hashStoreContractInstance) {\n      return false;\n    }\n\n    return this.state.fullName && this.state.title && this.state.text && this.state.buffer;\n  }\n\n  render() {\n    return (\n      <div className=\"SubmitForm\">\n        \n        <Loader loaded={!this.state.loadingVersion}>\n          {this.props.match.params.id && !this.state.submission ? (\n            <Alert variant=\"danger\">\n            ERROR: Paper ID {this.props.match.params.id} no encontrado.\n          </Alert>\n          ) : ( \n          <div>\n\n        <Row>\n          <Col xs={10}>\n        <Form className=\"mt-3\">\n        <Form.Group controlId=\"formGroupTitle\" className=\"mt-3\">\n        <FormControl required type = \"text\" onChange = {e => this.updateInputValue(e, 'title')} \n              placeholder = \"Titulo\" value={this.state.title}/>\n        </Form.Group>\n        <Form.Group controlId=\"formGroupAuthors\" className=\"mt-4\">\n        <FormControl required type = \"text\" onChange = {e => this.updateInputValue(e, 'fullName')} \n              placeholder = \"Autores\" value={this.state.fullName}/>\n        </Form.Group>\n        <Form.Group controlId=\"formGroupAbstract\" className=\"mt-4\">\n        <FormControl required as = \"textarea\" onChange = {e => this.updateInputValue(e, 'text')} \n              placeholder = \"Resumen\" value={this.state.text} rows=\"10\"/>\n        </Form.Group>\n        <Form.Group controlId=\"formGroupFile\" className=\"my-4\">\n          <FormControl required           \n            type = \"file\"\n            onChange = {this.captureFile}\n          />\n          </Form.Group>\n          \n          <div><small>Precio por Paper: {this.props.web3.utils.fromWei(this.state.price, 'ether')} ETH</small></div>\n          <Loader loaded={!this.state.savingText}>\n          <Button\n            type=\"submit\" className=\"mt-3 pure-button pure-input-1-2 button-success\"\n            disabled={!this.validForm() || this.state.savingText} \n            onClick={() => this.saveText()}>\n              Subir         \n          </Button>\n          </Loader>\n      \n        </Form>\n        </Col>\n        </Row>\n        </div>\n          )\n       }\n        </Loader>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n"]},"metadata":{},"sourceType":"module"}