{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/FetchForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nvar Loader = require('react-loader');\n\nclass FetchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingSubmission: false,\n      submission: {\n        versions: []\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadSubmissionById(this.props.match.params.id);\n  }\n\n  UNSAFE_componentWillMount() {}\n\n  async loadSubmissionById(hashId) {\n    this.setState({\n      loadingSubmission: true,\n      submission: {\n        versions: []\n      }\n    });\n\n    try {\n      let submission = await this.loadSubmission(hashId);\n      this.setState({\n        loadingSubmission: false,\n        submission: submission\n      });\n    } catch (err) {\n      this.setState({\n        loadingSubmission: false\n      });\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  loadSubmission(hashId) {\n    return new Promise(async (resolve, reject) => {\n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then(async values => {\n        if (values[0] === \"0x0000000000000000000000000000000000000000\") {\n          return reject(new Error(\"Submission not found\"));\n        }\n\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.versionsLength = values[3].toNumber();\n        submission.hashId = hashId;\n        this.props.ipfs.catJSON(submission.hashContent, async (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(submission);\n          }\n\n          submission.title = data.title;\n          submission.text = data.text;\n          submission.fullName = data.fullName;\n          submission.file = data.file;\n          submission.versions = [];\n          resolve(submission);\n        });\n      }).catch(err => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderSubmission(submission) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: submission.hashId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, submission.title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, submission.fullName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 42\n      }\n    }, \"Published on: \", new Date(submission.timestamp * 1000).toLocaleDateString('en-EN', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3 submission-abstract\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, submission.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-sender\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Sent from wallet: \", submission.sender, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 49\n      }\n    }), \"Submission hash: \", submission.hashContent, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 53\n      }\n    }), \"Manuscript hash: \", /*#__PURE__*/React.createElement(\"a\", {\n      className: \"submission-hash-content\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: `https://ipfs.infura.io:5001/api/v0/cat/${submission.file}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }\n    }, submission.file), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 102\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      href: \"https://ipfs.infura.io:5001/api/v0/cat/\" + submission.file,\n      className: \"mt-3 btn-side btn-read\",\n      variant: \"primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Read\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n  updateHashId(e) {\n    this.setState({\n      'hashId': e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show-submission\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.loadingSubmission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, this.state.submission ? this.renderSubmission(this.state.submission) : null));\n  }\n\n}\n\nexport default FetchForm;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/FetchForm.js"],"names":["React","Component","Button","Row","Col","Loader","require","FetchForm","constructor","props","state","loadingSubmission","submission","versions","componentDidMount","loadSubmissionById","match","params","id","UNSAFE_componentWillMount","hashId","setState","loadSubmission","err","addNotification","message","Promise","resolve","reject","hashStoreContractInstance","getPaperByID","then","values","Error","sender","hashContent","timestamp","toNumber","versionsLength","ipfs","catJSON","data","console","log","title","text","fullName","file","catch","renderSubmission","Date","toLocaleDateString","year","month","day","updateHashId","e","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Row, Col} from 'react-bootstrap';\n\nvar Loader = require('react-loader');\n\nclass FetchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loadingSubmission: false,\n      submission: {\n        versions:[]\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadSubmissionById(this.props.match.params.id);\n  }\n\n  UNSAFE_componentWillMount() {\n  }\n\n  async loadSubmissionById(hashId) {\n    this.setState({loadingSubmission: true, submission: {versions:[]}});\n    try {\n      let submission = await this.loadSubmission(hashId);\n      this.setState({loadingSubmission: false, submission: submission});\n    }\n    catch (err) {\n      this.setState({loadingSubmission: false});\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  loadSubmission(hashId) {\n    return new Promise(async (resolve, reject) => {\n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then( async (values) => {\n        if (values[0] === \"0x0000000000000000000000000000000000000000\") {\n          return reject(new Error(\"Submission not found\"));\n        }\n\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.versionsLength = values[3].toNumber();\n        submission.hashId = hashId;\n        this.props.ipfs.catJSON(submission.hashContent, async (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(submission);\n          }\n\n          submission.title = data.title;\n          submission.text = data.text;\n          submission.fullName = data.fullName;\n          submission.file = data.file;\n          submission.versions = [];\n          \n          resolve(submission);\n        });\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderSubmission(submission) {\n    return (\n      <div key={submission.hashId}>\n        <Row>\n        <Col>\n        <h1>{submission.title}</h1>\n        \n        <div className=\"submission-authors\">{submission.fullName}</div> \n        <div className=\"submission-date\"><small className=\"text-muted\">\n            Published on: {new Date(submission.timestamp*1000).toLocaleDateString('en-EN', \n            { year: 'numeric', month: 'long', day: 'numeric' })}</small></div>\n\n        <p className=\"mt-3 submission-abstract\">{submission.text}</p>\n\n        <div className=\"submission-sender\">\n          <small className=\"text-muted\">\n          Sent from wallet: {submission.sender} <br/>\n          Submission hash: {submission.hashContent} <br/>\n          Manuscript hash: <a className=\"submission-hash-content\" target=\"_blank\" rel=\"noopener noreferrer\"\n            href={`https://ipfs.infura.io:5001/api/v0/cat/${submission.file}`}>{submission.file}</a> <br/>\n          </small>\n        </div>\n        </Col>\n        <Col xs={3}>\n          <div className=\"my-3\">\n          <Button href={\"https://ipfs.infura.io:5001/api/v0/cat/\"+submission.file} \n          className=\"mt-3 btn-side btn-read\" variant=\"primary\" size=\"lg\">Read</Button>\n          </div>\n          <div className=\"my-3\">\n          </div>\n        </Col>\n        </Row>\n      </div>\n    );\n  }\n\n  updateHashId(e) {\n    this.setState({'hashId': e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"show-submission\">\n          <Loader loaded={!this.state.loadingSubmission}>\n            {this.state.submission ? this.renderSubmission(this.state.submission) : null}\n          </Loader>\n      </div>\n    );\n  }\n}\n\nexport default FetchForm;\n"]},"metadata":{},"sourceType":"module"}