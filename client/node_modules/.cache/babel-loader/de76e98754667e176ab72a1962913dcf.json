{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/RecentSubmits.js\";\nimport React, { Component } from 'react';\nimport IntroJumbo from './Jumbotron';\n\nvar Loader = require('react-loader');\n\nclass RecentSubmits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cargandoPapersReciente: false,\n      papersRecientes: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.cargarPapersRecientes();\n  }\n\n  async cargarPapersRecientes() {\n    this.setState({\n      cargandoPapersReciente: true,\n      papersRecientes: []\n    });\n\n    try {\n      let papersRecientes = [];\n      let ultimoHashId = await this.props.hashStoreContractInstance.ultimoPaperId();\n      ultimoHashId = ultimoHashId.toNumber();\n      const startHashId = Math.max(1, ultimoHashId - 5);\n\n      for (let i = ultimoHashId; i >= startHashId; i--) {\n        let paper = await this.cargarPaper(i);\n        papersRecientes.push(paper);\n      }\n\n      this.setState({\n        cargandoPapersReciente: false,\n        papersRecientes: papersRecientes\n      });\n    } catch (err) {\n      this.setState({\n        cargandoPapersReciente: false\n      });\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  cargarPaper(hashId) {\n    return new Promise((resolve, reject) => {\n      let paper = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then(values => {\n        paper.remitente = values[0];\n        paper.hashContenido = values[1];\n        paper.vartiempo = values[2].toNumber();\n        paper.hashId = hashId;\n        this.props.ipfs.catJSON(paper.hashContenido, (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(paper);\n          }\n\n          paper.titulo = data.titulo;\n          paper.texto = data.texto;\n          paper.fullNombre = data.fullNombre;\n          paper.archivo = data.archivo;\n          resolve(paper);\n        });\n      }).catch(err => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderPaper(paper) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper\",\n      key: paper.hashId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/show/\" + paper.hashId,\n      className: \"paper-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, paper.titulo)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autor-paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, paper.fullNombre), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-fecha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }\n    }, \"Publicado: \", new Date(paper.vartiempo * 1000).toLocaleDateString('en-EN', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IntroJumbo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 latest-preprints\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Ultimos Papers\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.cargandoPapersReciente,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.papersRecientes.map(paper => this.renderPaper(paper))))));\n  }\n\n}\n\nexport default RecentSubmits;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/RecentSubmits.js"],"names":["React","Component","IntroJumbo","Loader","require","RecentSubmits","constructor","props","state","cargandoPapersReciente","papersRecientes","UNSAFE_componentWillMount","cargarPapersRecientes","setState","ultimoHashId","hashStoreContractInstance","ultimoPaperId","toNumber","startHashId","Math","max","i","paper","cargarPaper","push","err","addNotification","message","hashId","Promise","resolve","reject","getPaperByID","then","values","remitente","hashContenido","vartiempo","ipfs","catJSON","data","console","log","titulo","texto","fullNombre","archivo","catch","renderPaper","Date","toLocaleDateString","year","month","day","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\n\nimport IntroJumbo from './Jumbotron';\n\nvar Loader = require('react-loader');\n\nclass RecentSubmits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cargandoPapersReciente:false,\n      papersRecientes: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.cargarPapersRecientes();\n  }\n\n  async cargarPapersRecientes() {\n    this.setState({cargandoPapersReciente: true, papersRecientes: []});\n    try {\n      let papersRecientes = [];\n      let ultimoHashId = await this.props.hashStoreContractInstance.ultimoPaperId();\n      ultimoHashId = ultimoHashId.toNumber();\n      const startHashId = Math.max(1, ultimoHashId - 5);\n      for (let i = ultimoHashId; i >= startHashId; i--) {\n        let paper = await this.cargarPaper(i);\n        papersRecientes.push(paper);\n      }\n      this.setState({cargandoPapersReciente: false, papersRecientes: papersRecientes});\n    }\n    catch (err) {\n      this.setState({cargandoPapersReciente: false});\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  cargarPaper(hashId) {\n    return new Promise((resolve, reject) => {\n      let paper = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then((values) => {\n        paper.remitente = values[0];\n        paper.hashContenido = values[1];\n        paper.vartiempo = values[2].toNumber();\n        paper.hashId = hashId;\n        this.props.ipfs.catJSON(paper.hashContenido, (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(paper);\n          }\n\n          paper.titulo = data.titulo;\n          paper.texto = data.texto;\n          paper.fullNombre = data.fullNombre;\n          paper.archivo = data.archivo;\n          resolve(paper);\n        });\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderPaper(paper) {\n    return (\n      <div className=\"paper\" key={paper.hashId}>\n          <h3><a href={\"/show/\"+paper.hashId} className=\"paper-id\">{paper.titulo}</a></h3>\n          <div className=\"autor-paper\">{paper.fullNombre}</div> \n          <div className=\"paper-fecha\"><small className=\"text-muted\">\n            Publicado: {new Date(paper.vartiempo*1000).toLocaleDateString('en-EN', \n            { year: 'numeric', month: 'long', day: 'numeric' })}</small></div>\n      </div>);\n  }\n\n  render() {\n    return (\n      <div>\n        <IntroJumbo/>\n        <div className=\"mt-5 latest-preprints\">\n          <h2>Ultimos Papers</h2>\n          <div className=\"paper\">\n          <Loader loaded={!this.state.cargandoPapersReciente}>\n            {this.state.papersRecientes.map((paper) => this.renderPaper(paper))}\n          </Loader>\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default RecentSubmits;"]},"metadata":{},"sourceType":"module"}