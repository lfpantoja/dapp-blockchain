{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/FetchForm.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nvar Loader = require('react-loader');\n\nclass FetchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cargandoPaper: false,\n      paper: {}\n    };\n  }\n\n  componentDidMount() {\n    this.cargarPaperById(this.props.match.params.id);\n  }\n\n  UNSAFE_componentWillMount() {}\n\n  async cargarPaperById(hashId) {\n    this.setState({\n      cargandoPaper: true,\n      paper: {}\n    });\n\n    try {\n      let paper = await this.cargarPaper(hashId);\n      this.setState({\n        cargandoPaper: false,\n        paper: paper\n      });\n    } catch (err) {\n      this.setState({\n        cargandoPaper: false\n      });\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  cargarPaper(hashId) {\n    return new Promise(async (resolve, reject) => {\n      let paper = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then(async values => {\n        if (values[0] === \"0x0000000000000000000000000000000000000000\") {\n          return reject(new Error(\"No existe Paper\"));\n        }\n\n        paper.remitente = values[0];\n        paper.hashContenido = values[1];\n        paper.vartiempo = values[2].toNumber();\n        paper.hashId = hashId;\n        this.props.ipfs.catJSON(paper.hashContenido, async (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(paper);\n          }\n\n          paper.titulo = data.titulo;\n          paper.texto = data.texto;\n          paper.fullNombre = data.fullNombre;\n          paper.archivo = data.archivo;\n          resolve(paper);\n        });\n      }).catch(err => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderPaper(paper) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: paper.hashId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, paper.titulo), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"autor-paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, paper.fullNombre), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-fecha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }\n    }, \"Publicado: \", new Date(paper.vartiempo * 1000).toLocaleDateString('en-EN', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3 autor-abstract\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, paper.texto), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-remitente\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Enviado desde la billetera: \", paper.remitente, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 61\n      }\n    }), \"Hash de Paper: \", paper.hashContenido, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 52\n      }\n    }), \"Hash Contenido: \", /*#__PURE__*/React.createElement(\"a\", {\n      className: \"paper-hash-contenido\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: `https://ipfs.infura.io:5001/api/v0/cat/${paper.archivo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 31\n      }\n    }, paper.archivo), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 101\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      href: \"https://ipfs.infura.io:5001/api/v0/cat/\" + paper.archivo,\n      className: \"mt-3 btn-side btn-read\",\n      variant: \"primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"Visualizar\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n  updateHashId(e) {\n    this.setState({\n      'hashId': e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show-paper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.cargandoPaper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, this.state.paper ? this.renderPaper(this.state.paper) : null));\n  }\n\n}\n\nexport default FetchForm;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/FetchForm.js"],"names":["React","Component","Button","Row","Col","LinkContainer","Loader","require","FetchForm","constructor","props","state","cargandoPaper","paper","componentDidMount","cargarPaperById","match","params","id","UNSAFE_componentWillMount","hashId","setState","cargarPaper","err","addNotification","message","Promise","resolve","reject","hashStoreContractInstance","getPaperByID","then","values","Error","remitente","hashContenido","vartiempo","toNumber","ipfs","catJSON","data","console","log","titulo","texto","fullNombre","archivo","catch","renderPaper","Date","toLocaleDateString","year","month","day","updateHashId","e","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Row, Col} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\nvar Loader = require('react-loader');\n\nclass FetchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cargandoPaper: false,\n      paper: {\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.cargarPaperById(this.props.match.params.id);\n  }\n\n  UNSAFE_componentWillMount() {\n  }\n\n  async cargarPaperById(hashId) {\n    this.setState({cargandoPaper: true, paper: {}});\n    try {\n      let paper = await this.cargarPaper(hashId);\n      this.setState({cargandoPaper: false, paper: paper});\n    }\n    catch (err) {\n      this.setState({cargandoPaper: false});\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  cargarPaper(hashId) {\n    return new Promise(async (resolve, reject) => {\n      let paper = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then( async (values) => {\n        if (values[0] === \"0x0000000000000000000000000000000000000000\") {\n          return reject(new Error(\"No existe Paper\"));\n        }\n\n        paper.remitente = values[0];\n        paper.hashContenido = values[1];\n        paper.vartiempo = values[2].toNumber();\n        paper.hashId = hashId;\n        this.props.ipfs.catJSON(paper.hashContenido, async (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(paper);\n          }\n\n          paper.titulo = data.titulo;\n          paper.texto = data.texto;\n          paper.fullNombre = data.fullNombre;\n          paper.archivo = data.archivo;\n          \n          resolve(paper);\n        });\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderPaper(paper) {\n\n    return (\n      <div key={paper.hashId}>\n        <Row>\n        <Col>\n        <h1>{paper.titulo}</h1>\n        \n        <div className=\"autor-paper\">{paper.fullNombre}</div> \n        <div className=\"paper-fecha\"><small className=\"text-muted\">\n            Publicado: {new Date(paper.vartiempo*1000).toLocaleDateString('en-EN', \n            { year: 'numeric', month: 'long', day: 'numeric' })}</small></div>\n\n        <p className=\"mt-3 autor-abstract\">{paper.texto}</p>         \n\n            <div className=\"paper-remitente\">\n              <small className=\"text-muted\">\n              Enviado desde la billetera: {paper.remitente} <br/>\n              Hash de Paper: {paper.hashContenido} <br/>\n              Hash Contenido: <a className=\"paper-hash-contenido\" target=\"_blank\" rel=\"noopener noreferrer\"\n               href={`https://ipfs.infura.io:5001/api/v0/cat/${paper.archivo}`}>{paper.archivo}</a> <br/>\n\n              </small>\n\n            </div>\n            </Col>\n            <Col xs={3}>\n              <div className=\"my-3\">\n              <Button href={\"https://ipfs.infura.io:5001/api/v0/cat/\"+paper.archivo} \n              className=\"mt-3 btn-side btn-read\" variant=\"primary\" size=\"lg\">Visualizar</Button>\n              </div>\n              <div className=\"my-3\">\n              \n              </div>\n            </Col>\n            </Row>\n      </div>);\n  }\n\n  updateHashId(e) {\n    this.setState({'hashId': e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"show-paper\">\n          <Loader loaded={!this.state.cargandoPaper}>\n            {this.state.paper ? this.renderPaper(this.state.paper) : null}\n          </Loader>\n      </div>\n    );\n  }\n}\n\nexport default FetchForm;\n"]},"metadata":{},"sourceType":"module"}