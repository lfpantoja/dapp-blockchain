{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/RecentSubmissions.js\";\nimport React, { Component } from 'react';\nimport IntroJumbo from './Jumbotron';\n\nvar Loader = require('react-loader');\n\nclass RecentSubmissions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadingRecentSubmissions: false,\n      recentSubmissions: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.loadRecentSubmissions();\n  }\n\n  async loadRecentSubmissions() {\n    this.setState({\n      loadingRecentSubmissions: true,\n      recentSubmissions: []\n    });\n\n    try {\n      let recentSubmissions = [];\n      let lastHashId = await this.props.hashStoreContractInstance.lastPaperId();\n      lastHashId = lastHashId.toNumber();\n      const startHashId = Math.max(1, lastHashId - 5);\n\n      for (let i = lastHashId; i >= startHashId; i--) {\n        let submission = await this.loadSubmission(i);\n        recentSubmissions.push(submission);\n      }\n\n      this.setState({\n        loadingRecentSubmissions: false,\n        recentSubmissions: recentSubmissions\n      });\n    } catch (err) {\n      this.setState({\n        loadingRecentSubmissions: false\n      });\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  loadSubmission(hashId) {\n    return new Promise((resolve, reject) => {\n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then(values => {\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.hashId = hashId;\n        this.props.ipfs.catJSON(submission.hashContent, (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(submission);\n          }\n\n          submission.title = data.title;\n          submission.text = data.text;\n          submission.fullName = data.fullName;\n          submission.file = data.file;\n          resolve(submission);\n        });\n      }).catch(err => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderSubmission(submission) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission\",\n      key: submission.hashId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/show/\" + submission.hashId,\n      className: \"submission-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, submission.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-authors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, submission.fullName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submission-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 44\n      }\n    }, \"Publicado: \", new Date(submission.timestamp * 1000).toLocaleDateString('es-ES', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    }))));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IntroJumbo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2 latest-preprints\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Ultimos Papers\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submissions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.loadingRecentSubmissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.recentSubmissions.map(submission => this.renderSubmission(submission))))));\n  }\n\n}\n\nexport default RecentSubmissions;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/components/RecentSubmissions.js"],"names":["React","Component","IntroJumbo","Loader","require","RecentSubmissions","constructor","props","state","loadingRecentSubmissions","recentSubmissions","UNSAFE_componentWillMount","loadRecentSubmissions","setState","lastHashId","hashStoreContractInstance","lastPaperId","toNumber","startHashId","Math","max","i","submission","loadSubmission","push","err","addNotification","message","hashId","Promise","resolve","reject","getPaperByID","then","values","sender","hashContent","timestamp","ipfs","catJSON","data","console","log","title","text","fullName","file","catch","renderSubmission","Date","toLocaleDateString","year","month","day","render","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport IntroJumbo from './Jumbotron';\n\nvar Loader = require('react-loader');\n\nclass RecentSubmissions extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      loadingRecentSubmissions:false,\n      recentSubmissions: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.loadRecentSubmissions();\n  }\n\n  async loadRecentSubmissions() {\n    this.setState({loadingRecentSubmissions: true, recentSubmissions: []});\n    try {\n      let recentSubmissions = [];\n      let lastHashId = await this.props.hashStoreContractInstance.lastPaperId();\n      lastHashId = lastHashId.toNumber();\n      const startHashId = Math.max(1, lastHashId - 5);\n      for (let i = lastHashId; i >= startHashId; i--) {\n        let submission = await this.loadSubmission(i);\n        recentSubmissions.push(submission);\n      }\n      this.setState({loadingRecentSubmissions: false, recentSubmissions: recentSubmissions});\n    }\n    catch (err) {\n      this.setState({loadingRecentSubmissions: false});\n      this.props.addNotification(err.message, \"error\");\n    }\n  }\n\n  loadSubmission(hashId) {\n    return new Promise((resolve, reject) => {\n      let submission = {};\n      this.props.hashStoreContractInstance.getPaperByID(hashId).then((values) => {\n        submission.sender = values[0];\n        submission.hashContent = values[1];\n        submission.timestamp = values[2].toNumber();\n        submission.hashId = hashId;\n        this.props.ipfs.catJSON(submission.hashContent, (err, data) => {\n          if (err) {\n            console.log(err);\n            return resolve(submission);\n          }\n\n          submission.title = data.title;\n          submission.text = data.text;\n          submission.fullName = data.fullName;\n          submission.file = data.file;\n          resolve(submission);\n        });\n      }).catch((err) => {\n        return reject(err);\n      });\n    });\n  }\n\n  renderSubmission(submission) {\n    return (\n      <div className=\"submission\" key={submission.hashId}>\n          <h3><a href={\"/show/\"+submission.hashId} className=\"submission-id\">{submission.title}</a></h3>\n          <div className=\"submission-authors\">{submission.fullName}</div> \n          <div className=\"submission-date\"><small className=\"text-muted\">\n            Publicado: {new Date(submission.timestamp*1000).toLocaleDateString('es-ES', \n            { year: 'numeric', month: 'long', day: 'numeric' })}</small></div>\n      </div>);\n  }\n\n  render() {\n    return (\n      <div>\n        <IntroJumbo/>\n        <div className=\"mt-2 latest-preprints\">\n          <h3>Ultimos Papers</h3>\n          <div className=\"submissions\">\n          <Loader loaded={!this.state.loadingRecentSubmissions}>\n            {this.state.recentSubmissions.map((submission) => this.renderSubmission(submission))}\n          </Loader>\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default RecentSubmissions;\n"]},"metadata":{},"sourceType":"module"}