{"ast":null,"code":"var _jsxFileName = \"/home/fer/UCE/Tesis/blockchain-dapp/client/src/App.js\";\nimport React, { Component } from 'react';\nimport HashStoreContract from './contracts/Publications.json';\nimport getWeb3 from './utils/getWeb3';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SubmitForm from './components/SubmitForm';\nimport RecentSubmissions from './components/RecentSubmissions';\nimport FetchForm from './components/FetchForm';\nimport Header from './components/Header';\nimport './css/bootstrap.css';\nimport './App.css';\n\nconst contract = require('truffle-contract');\n\nvar NotificationSystem = require('react-notification-system');\n\nvar Loader = require('react-loader');\n\nconst IPFS = require('ipfs-mini');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      web3: null,\n      submitFormDisplayed: false,\n      fetchFormDisplayed: false,\n      recentSubmissionsDisplayed: false\n    };\n  }\n\n  addNotification(message, level) {\n    this._notificationSystem.addNotification({\n      message: message,\n      level: level,\n      position: \"br\"\n    });\n  }\n\n  UNSAFE_componentWillMount() {}\n\n  componentDidMount() {\n    this.setupWeb3(err => {\n      if (err) {\n        return console.log(err);\n      }\n\n      this.instantiateContract();\n    });\n    this.setupIpfs();\n    this._notificationSystem = this.refs.notificationSystem;\n    this.addNotification(\"Bienvenido !\", \"success\");\n  }\n\n  setupWeb3(cb) {\n    this.setState({\n      loadingWeb3: true,\n      loadingContract: true\n    });\n    getWeb3.then(results => {\n      let web3 = results.web3;\n\n      if (!web3) {\n        return this.setState({\n          loadingWeb3: false,\n          loadingContract: false,\n          network: \"Unknown\",\n          web3: null\n        });\n      }\n\n      let networkName;\n      web3.eth.net.getNetworkType((err, networkId) => {\n        networkName = \"Unknown\";\n        this.setState({\n          loadingWeb3: false,\n          web3: web3,\n          networkName: networkName\n        });\n        cb();\n      });\n    }).catch(err => {\n      this.setState({\n        loadingWeb3: false,\n        loadingContract: false\n      });\n      console.log('No se encuentra web3.', err.message);\n    });\n  }\n\n  setupIpfs() {\n    const ipfs = new IPFS({\n      host: 'ipfs.infura.io',\n      port: 5001,\n      protocol: 'https'\n    });\n    this.setState({\n      ipfs: ipfs\n    });\n  }\n\n  instantiateContract() {\n    this.setState({\n      loadingContract: true\n    });\n    console.log(\"Cargando Contrato\");\n    const hashStoreContract = contract(HashStoreContract);\n    hashStoreContract.setProvider(this.state.web3.currentProvider);\n    hashStoreContract.deployed().then(hashStoreContractInstance => {\n      this.setState({\n        hashStoreContractInstance\n      });\n      this.setState({\n        loadingContract: false\n      });\n    }).catch(err => {\n      this.setState({\n        loadingContract: false\n      });\n      this.addNotification(err.message, \"error\");\n    });\n  }\n\n  render() {\n    let noNetworkError = this.state.web3 ? /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"no-network\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, \"Aplicacion de Prueba\") : /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"no-network\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, \"Conectar con red Ethereum - Metamask\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NotificationSystem, {\n      ref: \"notificationSystem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      web3: this.state.web3,\n      loadingWeb3: this.state.loadingWeb3,\n      networkName: this.state.networkName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"flex-fill flex-shrink-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      loaded: !this.state.loadingWeb3 && !this.state.loadingContract,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, this.state.web3 && [\"Unknown\", \"Rinkeby\"].includes(this.state.networkName) ? /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: '/',\n      component: props => /*#__PURE__*/React.createElement(RecentSubmissions, Object.assign({\n        web3: this.state.web3,\n        ipfs: this.state.ipfs,\n        hashStoreContractInstance: this.state.hashStoreContractInstance,\n        addNotification: this.addNotification.bind(this)\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/submit/:id?',\n      component: props => /*#__PURE__*/React.createElement(SubmitForm, Object.assign({\n        web3: this.state.web3,\n        ipfs: this.state.ipfs,\n        hashStoreContractInstance: this.state.hashStoreContractInstance,\n        addNotification: this.addNotification.bind(this)\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 69\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: '/show/:id',\n      component: props => /*#__PURE__*/React.createElement(FetchForm, Object.assign({\n        web3: this.state.web3,\n        ipfs: this.state.ipfs,\n        hashStoreContractInstance: this.state.hashStoreContractInstance,\n        addNotification: this.addNotification.bind(this)\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 66\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })) : noNetworkError)))), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"footer mt-5 py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"footer-copyright\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center px-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"UCE (2020)\")))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fer/UCE/Tesis/blockchain-dapp/client/src/App.js"],"names":["React","Component","HashStoreContract","getWeb3","Route","BrowserRouter","Router","Switch","Container","Row","Col","SubmitForm","RecentSubmissions","FetchForm","Header","contract","require","NotificationSystem","Loader","IPFS","App","constructor","props","state","web3","submitFormDisplayed","fetchFormDisplayed","recentSubmissionsDisplayed","addNotification","message","level","_notificationSystem","position","UNSAFE_componentWillMount","componentDidMount","setupWeb3","err","console","log","instantiateContract","setupIpfs","refs","notificationSystem","cb","setState","loadingWeb3","loadingContract","then","results","network","networkName","eth","net","getNetworkType","networkId","catch","ipfs","host","port","protocol","hashStoreContract","setProvider","currentProvider","deployed","hashStoreContractInstance","render","noNetworkError","includes","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport HashStoreContract from './contracts/Publications.json'\nimport getWeb3 from './utils/getWeb3'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport {Container, Row, Col} from 'react-bootstrap';\nimport SubmitForm from './components/SubmitForm';\nimport RecentSubmissions from './components/RecentSubmissions';\nimport FetchForm from './components/FetchForm';\nimport Header from './components/Header';\nimport './css/bootstrap.css';\nimport './App.css'\n\nconst contract = require('truffle-contract')\n\nvar NotificationSystem = require('react-notification-system');\nvar Loader = require('react-loader');\n\nconst IPFS = require('ipfs-mini');\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      web3: null,\n      submitFormDisplayed: false,\n      fetchFormDisplayed: false,\n      recentSubmissionsDisplayed: false\n    }\n  }\n\n  addNotification(message, level) {\n    this._notificationSystem.addNotification({\n      message: message,\n      level: level,\n      position: \"br\"\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n\n  }\n\n  componentDidMount() {\n    this.setupWeb3((err) => {\n      if (err) {\n        return console.log(err);\n      }\n      this.instantiateContract();\n    });\n    this.setupIpfs();\n    this._notificationSystem = this.refs.notificationSystem;\n    this.addNotification(\"Bienvenido !\", \"success\")\n  }\n\n  setupWeb3(cb) {\n    this.setState({loadingWeb3: true,loadingContract:true,});\n    getWeb3.then(results => {\n      let web3 = results.web3;\n      if (!web3) {\n        return this.setState({\n          loadingWeb3: false,\n          loadingContract: false,\n          network: \"Unknown\",\n          web3: null\n        });\n      }\n\n      let networkName;\n      web3.eth.net.getNetworkType((err, networkId) => {\n        \n        networkName = \"Unknown\";\n\n        this.setState({\n          loadingWeb3: false,\n          web3: web3,\n          networkName: networkName\n        });\n        cb();\n      });\n    }).catch((err) => {\n      this.setState({loadingWeb3: false, loadingContract: false,});\n      console.log('No se encuentra web3.', err.message);\n    });\n  }\n\n  setupIpfs() {\n    const ipfs = new IPFS({host: 'ipfs.infura.io', port: 5001, protocol: 'https'});\n    this.setState({ipfs: ipfs});\n  }\n\n  instantiateContract() {\n    this.setState({loadingContract: true,});\n    console.log(\"Cargando Contrato\")\n    const hashStoreContract = contract(HashStoreContract);\n    hashStoreContract.setProvider(this.state.web3.currentProvider);\n\n    hashStoreContract.deployed().then((hashStoreContractInstance) => {\n      this.setState({hashStoreContractInstance});\n      this.setState({loadingContract: false,});\n    }).catch((err) => {\n      this.setState({loadingContract: false,});\n      this.addNotification(err.message, \"error\");\n    });\n  }\n\n  render() {\n    let noNetworkError = (this.state.web3 ?\n      <h3 className=\"no-network\">Aplicacion de Prueba</h3> :\n      <h3 className=\"no-network\">Conectar con red Ethereum - Metamask</h3>);\n\n    return (\n      <div className=\"App h-100\">\n        <Router>\n        <NotificationSystem ref=\"notificationSystem\"/>\n\n        <Header web3={this.state.web3} loadingWeb3={this.state.loadingWeb3} networkName={this.state.networkName}/>\n\n        <main className=\"flex-fill flex-shrink-0\">\n            <Container>\n              <div className=\"content\">\n              <Loader loaded={!this.state.loadingWeb3 && !this.state.loadingContract}>\n              {this.state.web3 && [\"Unknown\",\"Rinkeby\"].includes(this.state.networkName) ?\n              \n                <Switch>\n                <Route exact path={'/'} component={ (props) => <RecentSubmissions web3={this.state.web3} ipfs={this.state.ipfs}\n                                    hashStoreContractInstance={this.state.hashStoreContractInstance}\n                                    addNotification={this.addNotification.bind(this)} {...props}/>} />\n                <Route path={'/submit/:id?'} component={ (props) => <SubmitForm web3={this.state.web3} ipfs={this.state.ipfs}\n                                    hashStoreContractInstance={this.state.hashStoreContractInstance}\n                                    addNotification={this.addNotification.bind(this)} {...props}/>} />\n                <Route path={'/show/:id'} component={ (props) => <FetchForm web3={this.state.web3} ipfs={this.state.ipfs}\n                                    hashStoreContractInstance={this.state.hashStoreContractInstance}\n                                    addNotification={this.addNotification.bind(this)} {...props}/>} />\n                </Switch>\n              :\n              noNetworkError\n            }\n              </Loader>\n              </div>\n              </Container>\n              </main>\n\n              <footer className=\"footer mt-5 py-4\">\n                <Container>\n            \n            <Row className=\"footer-copyright\">\n              <Col className=\"text-center px-5\">\n              <em>UCE (2020)</em>\n              </Col>\n            </Row>\n            </Container>\n            </footer>\n          \n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}